{"ast":null,"code":"var _jsxFileName = \"/app/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\n// import all_product from '../Components/Assets/all_product'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  // for (let index = 0; index < all_product.length+1; index++) {\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n\n  // useEffect(()=>{\n  //     fetch('http://localhost:4000/allproducts').then((response)=>response.json()).then((data)=>setAll_Product(data))\n\n  //     if(localStorage.getItem('auth-token')){\n  //         fetch('http://localhost:4000/getcart',{\n  //             method:'POST',\n  //             headers:{\n  //                 Accept: 'application/form-data',\n  //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n  //                 'Content-Type': 'application/json'\n  //             },\n  //             body:\"\",\n  //         })\n  //         .then((response)=>response.json())\n  //         .then((data)=>setCartItems(data));\n  //     }\n  // },[])\n\n  // const addToCart = (itemId) => {\n  //     setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\n  //     // console.log(cartItems);\n  //     if(localStorage.getItem('auth-token')){\n  //         fetch('http://localhost:4000/addtocart',{\n  //             method:'POST',\n  //             headers:{\n  //                 Accept: 'application/form-data',\n  //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n  //                 'Content-Type': 'application/json'\n  //             },\n  //             body:JSON.stringify({\"itemId\":itemId}),\n  //         })\n  //         .then((response)=>response.json())\n  //         .then((data)=>console.log(data));\n  //     }\n  // }\n\n  // const removeFromCart = (itemId) => {\n  //     setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\n  //     if(localStorage.getItem('auth-token')){\n  //         fetch('http://localhost:4000/removefromcart',{\n  //             method:'POST',\n  //             headers:{\n  //                 Accept: 'application/form-data',\n  //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n  //                 'Content-Type': 'application/json'\n  //             },\n  //             body:JSON.stringify({\"itemId\":itemId}),\n  //         })\n  //         .then((response)=>response.json())\n  //         .then((data)=>console.log(data));\n  //     }\n  // }\n\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"6WXUSYBKq49KOwufyZTb8OtdpKk=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","addToCart","removeFromCart","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\n// import all_product from '../Components/Assets/all_product'\n\nexport const ShopContext = createContext(null);\n\nconst getDefaultCart = () => {\n    let cart = {};\n    // for (let index = 0; index < all_product.length+1; index++) {\n    for (let index = 0; index < 300+1; index++) {\n        cart[index] = 0;\n    }\n    return cart;\n}\n\nconst ShopContextProvider = (props) =>{\n\n    const [all_product,setAll_Product] = useState([]);\n    const [cartItems, setCartItems] = useState(getDefaultCart())\n    \n    // useEffect(()=>{\n    //     fetch('http://localhost:4000/allproducts').then((response)=>response.json()).then((data)=>setAll_Product(data))\n\n    //     if(localStorage.getItem('auth-token')){\n    //         fetch('http://localhost:4000/getcart',{\n    //             method:'POST',\n    //             headers:{\n    //                 Accept: 'application/form-data',\n    //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n    //                 'Content-Type': 'application/json'\n    //             },\n    //             body:\"\",\n    //         })\n    //         .then((response)=>response.json())\n    //         .then((data)=>setCartItems(data));\n    //     }\n    // },[])\n\n\n    // const addToCart = (itemId) => {\n    //     setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\n    //     // console.log(cartItems);\n    //     if(localStorage.getItem('auth-token')){\n    //         fetch('http://localhost:4000/addtocart',{\n    //             method:'POST',\n    //             headers:{\n    //                 Accept: 'application/form-data',\n    //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n    //                 'Content-Type': 'application/json'\n    //             },\n    //             body:JSON.stringify({\"itemId\":itemId}),\n    //         })\n    //         .then((response)=>response.json())\n    //         .then((data)=>console.log(data));\n    //     }\n    // }\n\n    // const removeFromCart = (itemId) => {\n    //     setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\n    //     if(localStorage.getItem('auth-token')){\n    //         fetch('http://localhost:4000/removefromcart',{\n    //             method:'POST',\n    //             headers:{\n    //                 Accept: 'application/form-data',\n    //                 'auth-token': `${localStorage.getItem('auth-token')}`,\n    //                 'Content-Type': 'application/json'\n    //             },\n    //             body:JSON.stringify({\"itemId\":itemId}),\n    //         })\n    //         .then((response)=>response.json())\n    //         .then((data)=>console.log(data));\n    //     }\n    // }\n\n    const getTotalCartAmount = () => {\n        let totalAmount = 0;\n        for(const item in cartItems){\n            if(cartItems[item]>0){\n                let itemInfo = all_product.find((product) => product.id === Number(item))\n                totalAmount += itemInfo.new_price * cartItems[item];\n            }\n        }\n        return totalAmount;\n    }\n\n    const getTotalCartItems = () => {\n        let totalItem = 0;\n        for(const item in cartItems){\n            if(cartItems[item]>0){\n                totalItem += cartItems[item];\n            }\n        }\n        return totalItem;\n    }\n\n\n    const contextValue = {getTotalCartItems, getTotalCartAmount, all_product, cartItems, addToCart, removeFromCart};\n    return (\n        <ShopContext.Provider value={contextValue}>\n            {props.children}\n        </ShopContext.Provider>\n    )\n}\n\nexport default ShopContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMM,cAAc,GAAGA,CAAA,KAAM;EACzB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb;EACA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,GAAG,GAAC,CAAC,EAAEA,KAAK,EAAE,EAAE;IACxCD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACnB;EACA,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,mBAAmB,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAElC,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;;EAE5D;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAI,MAAMC,IAAI,IAAIJ,SAAS,EAAC;MACxB,IAAGA,SAAS,CAACI,IAAI,CAAC,GAAC,CAAC,EAAC;QACjB,IAAIC,QAAQ,GAAGP,WAAW,CAACQ,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CAAC,CAAC;QACzED,WAAW,IAAIE,QAAQ,CAACK,SAAS,GAAGV,SAAS,CAACI,IAAI,CAAC;MACvD;IACJ;IACA,OAAOD,WAAW;EACtB,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIC,SAAS,GAAG,CAAC;IACjB,KAAI,MAAMR,IAAI,IAAIJ,SAAS,EAAC;MACxB,IAAGA,SAAS,CAACI,IAAI,CAAC,GAAC,CAAC,EAAC;QACjBQ,SAAS,IAAIZ,SAAS,CAACI,IAAI,CAAC;MAChC;IACJ;IACA,OAAOQ,SAAS;EACpB,CAAC;EAGD,MAAMC,YAAY,GAAG;IAACF,iBAAiB;IAAET,kBAAkB;IAAEJ,WAAW;IAAEE,SAAS;IAAEc,SAAS;IAAEC;EAAc,CAAC;EAC/G,oBACIzB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAEJ,YAAa;IAAAK,QAAA,EACrCtB,KAAK,CAACsB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAzB,EAAA,CAvFKF,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AAyFzB,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}