{"ast":null,"code":"import { getCountryCallingCode } from 'libphonenumber-js/core';\nexport function getInputValuePrefix(_ref) {\n  var country = _ref.country,\n    international = _ref.international,\n    withCountryCallingCode = _ref.withCountryCallingCode,\n    metadata = _ref.metadata;\n  return country && international && !withCountryCallingCode ? \"+\".concat(getCountryCallingCode(country, metadata)) : '';\n}\nexport function removeInputValuePrefix(value, prefix) {\n  if (prefix) {\n    value = value.slice(prefix.length);\n    if (value[0] === ' ') {\n      value = value.slice(1);\n    }\n  }\n  return value;\n}","map":{"version":3,"names":["getCountryCallingCode","getInputValuePrefix","_ref","country","international","withCountryCallingCode","metadata","concat","removeInputValuePrefix","value","prefix","slice","length"],"sources":["/app/node_modules/react-phone-number-input/source/helpers/inputValuePrefix.js"],"sourcesContent":["import { getCountryCallingCode } from 'libphonenumber-js/core'\r\n\r\nexport function getInputValuePrefix({\r\n\tcountry,\r\n\tinternational,\r\n\twithCountryCallingCode,\r\n\tmetadata\r\n}) {\r\n\treturn country && international && !withCountryCallingCode ?\r\n\t\t`+${getCountryCallingCode(country, metadata)}` :\r\n\t\t''\r\n}\r\n\r\nexport function removeInputValuePrefix(value, prefix) {\r\n\tif (prefix) {\r\n\t\tvalue = value.slice(prefix.length)\r\n\t\tif (value[0] === ' ') {\r\n\t\t\tvalue = value.slice(1)\r\n\t\t}\r\n\t}\r\n\treturn value\r\n}"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,wBAAwB;AAE9D,OAAO,SAASC,mBAAmBA,CAAAC,IAAA,EAKhC;EAAA,IAJFC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IACbC,sBAAsB,GAAAH,IAAA,CAAtBG,sBAAsB;IACtBC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;EAER,OAAOH,OAAO,IAAIC,aAAa,IAAI,CAACC,sBAAsB,OAAAE,MAAA,CACrDP,qBAAqB,CAACG,OAAO,EAAEG,QAAQ,CAAC,IAC5C,EAAE;AACJ;AAEA,OAAO,SAASE,sBAAsBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACrD,IAAIA,MAAM,EAAE;IACXD,KAAK,GAAGA,KAAK,CAACE,KAAK,CAACD,MAAM,CAACE,MAAM,CAAC;IAClC,IAAIH,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACrBA,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;IACvB;EACD;EACA,OAAOF,KAAK;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}